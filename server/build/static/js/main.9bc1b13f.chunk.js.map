{"version":3,"sources":["components/Slot.js","services/bookings.js","pages/CalendarPage.js","components/Popup.js","pages/BookingFormPage.js","App.js","index.js"],"names":["Slot","timing","onSelect","isSelected","className","booked","onClick","time","cachedBookings","opening_hours","getBookingsByMonth","month","year","a","axios","get","response","makeBooking","booking","post","getCurMonthBookings","date","Date","getMonth","getFullYear","addToCache","data","populateSlots","bookedSlots","allSlots","slot","endOfCurSlot","addMinutes","push","map","s","includes","currentTime","minutesToAdd","split","hours","minutes","Number","Math","floor","String","padStart","bookings","forEach","start","end","parsedDate","dateOfMonth","getDate","duration","getBookingsByDate","CalendarView","useState","setDate","bookingsOfDate","setBookingsOfDate","selectedSlot","setSelectedSlot","useEffect","bookingService","fetchCurMonth","handleOnSelect","maxDate","onChange","value","i","key","to","pathname","state","selectedDate","Popup","name","FormView","useLocation","setName","email","setEmail","bookingStatus","setBookingStatus","handleOnSubmit","event","preventDefault","statusText","toLocaleDateString","onSubmit","htmlFor","type","id","target","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bc1b13f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Slot({ timing, onSelect, isSelected }) {\n  const getColor = () => {\n    if (timing.booked) {\n      return 'bg-gray-400 text-gray-600';\n    }\n    if (isSelected) {\n      return 'bg-indigo-600 text-white';\n    }\n    return 'bg-blue-300';\n  };\n\n  const handleOnClick = () => {\n    !timing.booked && onSelect(timing.time);\n  };\n\n  return (\n    <div\n      className={`w-32 p-2 m-2 ${getColor()} text-center rounded-lg text-lg`}\n      onClick={handleOnClick}\n    >\n      {timing.time}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst baseUrl = '/api/v1/bookings';\n\nconst cachedBookings = {};\nconst INTERVAL = 30;\nconst opening_hours = { start: '10:00', end: '21:00' };\n\nconst getBookingsByMonth = async (month, year) => {\n  const response = await axios.get(`${baseUrl}?month=${month}&year=${year}`);\n\n  return response;\n};\n\nconst makeBooking = async (booking) => {\n  const response = await axios.post(`${baseUrl}`, booking);\n  return response;\n};\n\nconst getCurMonthBookings = async () => {\n  const date = new Date();\n  const response = await getBookingsByMonth(\n    date.getMonth(),\n    date.getFullYear()\n  );\n\n  addToCache(response.data);\n\n  return response;\n};\n\nconst getBookingsByDate = (date) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const dateOfMonth = date.getDate();\n  if (\n    !cachedBookings[year] ||\n    !cachedBookings[year][month] ||\n    !cachedBookings[year][month][dateOfMonth]\n  ) {\n    return populateSlots([]);\n  } else {\n    return populateSlots(cachedBookings[year][month][dateOfMonth]);\n  }\n};\n\nconst populateSlots = (bookedSlots) => {\n  let allSlots = [];\n  let slot = opening_hours.start;\n\n  while (slot != opening_hours.end) {\n    const endOfCurSlot = addMinutes(slot, INTERVAL);\n    allSlots.push({ time: `${slot}-${endOfCurSlot}` });\n    slot = endOfCurSlot;\n  }\n\n  return allSlots.map((s) => {\n    return { time: s.time, booked: bookedSlots.includes(s.time) };\n  });\n};\n\nconst addMinutes = (currentTime, minutesToAdd) => {\n  let [hours, minutes] = currentTime.split(':');\n\n  hours = Number(hours);\n  minutes = Number(minutes);\n  minutes += minutesToAdd;\n  hours += Math.floor(minutes / 60);\n  minutes = minutes % 60;\n\n  return `${hours}:${String(minutes).padStart(2, '0')}`;\n};\n\nconst addToCache = (bookings) => {\n  bookings.forEach(({ date, start, end }) => {\n    const parsedDate = new Date(date);\n    const year = parsedDate.getFullYear();\n    const month = parsedDate.getMonth();\n    const dateOfMonth = parsedDate.getDate();\n    const duration = `${start}-${end}`;\n    // check if year is already inside the cache\n    if (!cachedBookings[year]) {\n      cachedBookings[year] = [];\n    }\n    // check if month is already inside the cache\n    if (!cachedBookings[year][month]) {\n      cachedBookings[year][month] = [];\n    }\n    if (!cachedBookings[year][month][dateOfMonth]) {\n      cachedBookings[year][month][dateOfMonth] = [];\n    }\n    cachedBookings[year][month][dateOfMonth].push(duration);\n  });\n};\n\nexport default {\n  getBookingsByMonth,\n  getCurMonthBookings,\n  getBookingsByDate,\n  makeBooking,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport Slot from '../components/Slot';\nimport bookingService from '../services/bookings';\n\nexport default function CalendarView() {\n  const [date, setDate] = useState(new Date());\n  const [bookingsOfDate, setBookingsOfDate] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState('');\n\n  useEffect(() => {\n    const fetchCurMonth = async () => {\n      await bookingService.getCurMonthBookings();\n      setBookingsOfDate(bookingService.getBookingsByDate(new Date()));\n    };\n    fetchCurMonth();\n  }, []);\n\n  const handleDateChange = (date) => {\n    setDate(date);\n    setSelectedSlot('');\n    // console.log(bookingService.getBookingsByDate(date));\n    setBookingsOfDate([...bookingService.getBookingsByDate(date)]);\n  };\n\n  const handleOnSelect = (slot) => {\n    setSelectedSlot(slot);\n  };\n\n  const renderAllSlots = () => {\n    return bookingsOfDate.map((booking, i) => {\n      return (\n        <Slot\n          timing={booking}\n          key={i}\n          onSelect={handleOnSelect}\n          isSelected={selectedSlot === booking.time}\n        />\n      );\n    });\n  };\n\n  return (\n    <div\n      className='flex flex-col items-center max-w-full \n                    lg:flex-row lg:px-10 lg:m-10 \n                    xl:px-20 xl:m-20'\n    >\n      <div className='my-10 shadow-lg max-w-full'>\n        <Calendar\n          maxDate={new Date(2020, 11, 31)}\n          onChange={handleDateChange}\n          value={date}\n        />\n      </div>\n      {/* <div className='block self-start my-2 mx-10 text-xl'>\n        Selected{'  '}\n        <strong>{selectedSlot}</strong>\n      </div> */}\n\n      <div>\n        <div\n          className='py-5 my-2 mx-10 shadow-tb \n                        lg:mt-24'\n        >\n          <div className='flex flex-wrap h-64 justify-center py-8 max-w-full overflow-y-scroll'>\n            {renderAllSlots()}\n          </div>\n        </div>\n        <div\n          className='w-full px-10\n                        lg:flex lg:justify-end'\n        >\n          <Link\n            to={{\n              pathname: '/book',\n              state: { selectedDate: date, slot: selectedSlot },\n            }}\n          >\n            <button\n              className='w-full my-5 p-2 bg-indigo-600 text-white text-lg rounded-md shadow-md\n                                lg:w-auto lg:p-3 lg:mr-4'\n            >\n              Continue\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Popup({ name, time, date }) {\n  return (\n    <div className='h-screen px-12 w-full fixed left-0 top-0 flex flex-col justify-center items-center bg-black bg-opacity-50 '>\n      <div className='animate-slideIn lg:w-1/3'>\n        <div className='w-full p-4 bg-indigo-600 rounded-t-3xl'>\n          <p className='text-xl text-white text-center'>Booking Confirmed</p>\n        </div>\n        <div\n          className='bg-white p-5 rounded-b-3xl \n                        lg:flex flex-col lg:justify-center lg:items-center'\n        >\n          <p className='text-xl'>\n            Hi <strong>{name}</strong>. Your booking for <strong>{time}</strong>{' '}\n            on <strong>{date}</strong> is confirmed!.\n          </p>\n          <Link to='/'>\n            <button\n              className='w-full mt-10 p-2 bg-red-600  text-white text-lg rounded-md \n                                lg:w-32 lg:p-3'\n            >\n              Home\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport bookingService from '../services/bookings';\nimport Popup from './../components/Popup';\n\nexport default function FormView() {\n  const { selectedDate, slot } = useLocation().state;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [bookingStatus, setBookingStatus] = useState(false);\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    const booking = {\n      name: name,\n      email: email,\n      date: selectedDate,\n      start: slot.split('-')[0],\n      end: slot.split('-')[1],\n    };\n\n    const response = await bookingService.makeBooking(booking);\n    if (response.statusText === 'OK') {\n      setBookingStatus(true);\n    }\n  };\n\n  return (\n    <div className='lg:flex lg:flex-col lg:m-20 lg:items-center xl:m-40'>\n      <div className={`${bookingStatus ? 'visible' : 'hidden'}`}>\n        <Popup\n          name={name}\n          time={slot}\n          date={selectedDate.toLocaleDateString()}\n        ></Popup>\n      </div>\n      <p className='my-5 mx-10 text-xl'>\n        You are booking for <strong>{slot}</strong> on{' '}\n        <strong>{selectedDate.toLocaleDateString()}</strong>\n      </p>\n      <div className='mx-10 my-10'>\n        <form onSubmit={handleOnSubmit}>\n          <div>\n            <label className='block text-lg text-gray-700' htmlFor='fullname'>\n              Full Name:\n            </label>\n            <input\n              className='w-full border-b-2 border-gray-800 p-1  my-1 text-xl focus:border-indigo-600 focus:outline-none \n                          lg:w-auto'\n              type='text'\n              id='fullname'\n              onChange={(event) => setName(event.target.value)}\n              value={name}\n            />\n          </div>\n          <div className='mt-20 mb-10'>\n            <label className='block text-lg text-gray-700' htmlFor='email'>\n              Email:\n            </label>\n            <input\n              className='w-full border-b-2 border-gray-800 p-1 my-1 text-xl focus:border-indigo-600 focus:outline-none \n                          lg:w-auto'\n              type='email'\n              id='email'\n              onChange={(event) => setEmail(event.target.value)}\n              value={email}\n            />\n          </div>\n          <div\n            className='flex flex-col\n                          lg:flex-row'\n          >\n            <Link to='/'>\n              <button\n                className='w-full my-5 p-2 bg-red-600  text-white text-lg rounded-md \n                          lg:w-32 lg:p-3 lg:mr-4'\n              >\n                Back\n              </button>\n            </Link>\n            <input\n              className='w-full my-5 p-2 bg-indigo-600 text-white text-lg rounded-md \n                        lg:w-32 lg:p-3 lg:mx-20'\n              type='submit'\n              value='Book'\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport CalendarPage from './pages/CalendarPage';\nimport BookingFormPage from './pages/BookingFormPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/book'>\n          <BookingFormPage />\n        </Route>\n        <Route path='/'>\n          <CalendarPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}